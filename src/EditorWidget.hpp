
// ===============================================================================================================
// -*- C++ -*-
//
// EditorWidget.hpp - L3D Editor window.
//
// Copyright (c) 2012 Guilherme R. Lampert
// guilherme.ronaldo.lampert@gmail.com
//
// This code is licenced under the MIT license.
//
// This software is provided "as is" without express or implied
// warranties. You may freely copy and compile this source into
// applications you distribute provided that the copyright text
// above is included in the resulting source code.
//
// ===============================================================================================================

#ifndef EDITOR_WIDGET_HPP
#define EDITOR_WIDGET_HPP

#include <QWidget>

namespace Ui
{
class EditorWidget;
}

namespace l3d
{

// Main editor window, UI and controls
class EditorWidget
	: public QWidget
{
    Q_OBJECT

  public:

    explicit EditorWidget(QWidget * parent = 0);

    int getInspectorXOffset() const;
    void initUI();
    void resetUI();
    void enableUI(bool enabled);

    ~EditorWidget();

  private slots:

    // UI callbacks (generated by the QtCreator UI designer)
    void on_objectName_editingFinished();
    void on_posSelX_editingFinished();
    void on_posSelY_editingFinished();
    void on_posSelZ_editingFinished();
    void on_rotSelX_editingFinished();
    void on_rotSelY_editingFinished();
    void on_rotSelZ_editingFinished();
    void on_scaleSelX_editingFinished();
    void on_scaleSelY_editingFinished();
    void on_scaleSelZ_editingFinished();
    void on_colorSelR_editingFinished();
    void on_colorSelG_editingFinished();
    void on_colorSelB_editingFinished();
    void on_browseTextureBtn_clicked();
    void on_browseMeshBtn_clicked();
    void on_textureFilter_activated(int index);
    void on_scaleSelX_valueChanged(double arg1);
    void on_scaleSelY_valueChanged(double arg1);
    void on_scaleSelZ_valueChanged(double arg1);
    void on_rotSelX_valueChanged(double arg1);
    void on_rotSelY_valueChanged(double arg1);
    void on_rotSelZ_valueChanged(double arg1);
    void on_posSelX_valueChanged(double arg1);
    void on_posSelY_valueChanged(double arg1);
    void on_posSelZ_valueChanged(double arg1);
    void on_colorSelR_valueChanged(int arg1);
    void on_colorSelG_valueChanged(int arg1);
    void on_colorSelB_valueChanged(int arg1);
    void on_rendererOpts_activated(int index);
    void on_removeObjBtn_clicked();
    void on_newObjBtn_clicked();
    void on_loadSceneBtn_clicked();
    void on_saveSceneBtn_clicked();
    void on_shininessSel_valueChanged(int arg1);
    void on_LposSelX_valueChanged(double arg1);
    void on_LposSelY_valueChanged(double arg1);
    void on_LposSelZ_valueChanged(double arg1);
    void on_ambRSel_valueChanged(int arg1);
    void on_ambGSel_valueChanged(int arg1);
    void on_ambBSel_valueChanged(int arg1);

  private:

    Ui::EditorWidget * ui;
};

extern EditorWidget * editorWindow;

} // namespace l3d {}

#endif // EDITOR_WIDGET_HPP
